services:
    ft-transcendence:
        build:
            context: ./client/
            dockerfile: Dockerfile
        image: ft-transcendence:deploy
        container_name: ft-transcendence
        environment:
            - STAGE=Development
        volumes:
            - ./client:/var/www/ft_transcendence/:ro
            - ./client/conf/:/etc/nginx/sites-enabled/:ro
        ports:
            - 443:443
        networks:
            - ft_transcendence
        restart: on-failure

    authentication:
        build:
            context: ./services/authentication/
            dockerfile: Dockerfile
        image: authentication:deploy
        container_name: authentication
        environment:
            - STAGE=Development
        env_file:
            - .env
        volumes:
            - ./services/authentication/:/microservice/authentication/:rw
        networks:
            - ft_transcendence
        depends_on:
            postgres:
                condition: service_healthy
        restart: on-failure

    player:
        build:
            context: ./services/player/
            dockerfile: Dockerfile
        image: player:deploy
        container_name:  player
        environment:
            - STAGE=Development
        env_file:
            - .env
        volumes:
            - ./services/player/:/microservice/player/:rw
        networks:
            - ft_transcendence
        depends_on:
            postgres:
                condition: service_healthy
        restart: on-failure

    matchmaking:
        build:
            context: ./services/matchmaking/
            dockerfile: Dockerfile
        image: matchmaking:deploy
        container_name:  matchmaking
        environment:
            - STAGE=Development
        env_file:
            - .env
        volumes:
            - ./services/matchmaking/:/microservice/matchmaking/:rw
        networks:
            - ft_transcendence
        depends_on:
            postgres:
                condition: service_healthy
        restart: on-failure

    pong:
        build:
            context: ./services/pong/
            dockerfile: Dockerfile
        image: pong:deploy
        container_name:  pong
        environment:
            - STAGE=Development
        env_file:
            - .env
        volumes:
            - ./services/pong/:/microservice/pong/:rw
        networks:
            - ft_transcendence
        depends_on:
            postgres:
                condition: service_healthy
        restart: on-failure

    tictactoe:
        build:
            context: ./services/tictactoe/
            dockerfile: Dockerfile
        image: tictactoe:deploy
        container_name:  tictactoe
        environment:
            - STAGE=Development
        env_file:
            - .env
        volumes:
            - ./services/tictactoe/:/microservice/tictactoe/:rw
        networks:
            - ft_transcendence
        depends_on:
            postgres:
                condition: service_healthy
        restart: on-failure

    tournament:
        build:
            context: ./services/tournament/
            dockerfile: Dockerfile
        image: tournament:develop
        container_name: tournament
        environment:
            - STAGE=Development
        env_file:
            - .env
        volumes:
            - ./services/tournament/:/microservice/tournament/:rw
        networks:
            - ft_transcendence
        depends_on:
            postgres:
                condition: service_healthy
        restart: on-failure

    postgres:
        image: postgres:16.2-bullseye
        container_name: postgres
        env_file:
            - .env
        networks:
            - ft_transcendence
        restart: on-failure
        healthcheck:
            test: ["CMD-SHELL", "pg_isready"]
            interval: 5s
            timeout: 5s
            retries: 5

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin4
        env_file:
            - .env
        ports:
        - 8080:80
        networks:
            - ft_transcendence
        restart: on-failure

networks:
    ft_transcendence:
        name: ft_transcendence
        driver: bridge
